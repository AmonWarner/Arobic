Heya! If you read this, you probably want to learn about the more developer features of arobic os. If not, move on.

- Why did I made developer features?
Idk, Probably not many will use them, but they're fun and i'm bored.

For betas, I couldn't use electron(I coded this at school lol), so I installed the liveserver extention from VSC to bypass google CORS blocking. seems to work as normal.(installing apps from pkginstaller seems buggy but thats it)

SCRIPTS
I made scripts instead of plugins because scripts can run anything, including probably making plugins. Scripts is a developer way for users to mod their arobicOS without having to go into the code.

Starting out with scripts
To start out with scripts, Install scriptmanager from package installer. It looks bad because I'm lazy, I'll fix it later.
Then, you can open the app and pick a script. There should be atleast one script in there(openallapps.arbs, opens most if not all apps idk its just a test), Go into ui/scripts and create a script, name it whatever you want.arbs.
Scripts use pure javascript. The way it is run is simply running eval on every like in the script, so Idk if you can define variables.
When running a script, the script is being run as ScriptManager. So to access functions on the desktop or in index.js, you'll need to add parent.(function)
For example: parent.launchApp('appstore') will launch appstore.

All apps have an id, usually there repo name plus frame, or plus icon. For example, the icon for appstore will have id 'appstoreicon'.

APPS
(Copy and pasted from README)
NOTE: Making apps is STILL in beta. I even came across an issue while making the example app, and had to modify the code to fix it!

Apps in this operating system are just a website embedded in an iframe.

To make your own app, here's a tutorial:

1: Clone the Example folder, under apps/custom. This is a pretty basic example of an app. (You can also create your own, but this is a good tutorial for beginners lolol)
2: Click on index.html - This is the part off the app that will always be shown when the user clicks on the app. I can't teach you html, but w3schools has good examples: https://www.w3schools.com/html/ 
3: Modify index.html to create your own app.
4: If wanted, you can make an index.js file(for code), and style.css files(to make the website look good)
5: To fit the theme of the site, you can optionally import materialize, by adding:
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons" />
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
To the top of your site, just below the head, and
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
  Just above the end of the body.
6: Create an install file. this is what the Operating system uses to install new apps, so you don't want to mess it up.
- Create an install.abrp file in your code(If your using the test app it should already be there);
Here's the format for the install file:

- The path to the apps folder(Case sensitive)
- The name of the app that will be shown when it is loaded
- The version of the app
- The icon for the app(FIND ICONS AT https://fonts.google.com/icons)
- The color of the app(FIND COLORS AT https://materializecss.com/color.html)
- The width of the BARRIER of the app
- The height of the BARRIER of the app
- The width of the FRAME of the app
- The height of the FRAME of the app
- The scale of the FRAME of the app(if it doesnt fit)
- If the app supports fullscreen(true or false)

So, with you knowing that, here's the format of the example app:

Example
Example
0.0.2
thumb_up
blue-grey lighten-3
450px
450px
500px
500px
1.1
false

So there you go! After your done, drag your app folder into apps/custom, and use the package manager to select your install.abrp file. After, press refresh, and you are done!